@page "/editarpreferencias"
@using FrontSystemWine.Models
@using FrontSystemWine.Services

@using Microsoft.AspNetCore.Components.Authorization

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inherits OwningComponentBase<EditarPreferenciaService>

<section>
    <div class="container">
        <form>
            <div class="row">
                <h1>Editar minhas preferências</h1>

                <h3>Tipo de vinho</h3>
                <select @onchange="TipoVinhoChanged" class="form-control">
                    @foreach (var tipoVinho in listaTiposVinho)
                    {
                        <option value="@tipoVinho.Id"
                                selected="@(tipoVinho.Id == preferencia.IdTipoVinho)">
                            @tipoVinho.Descricao
                        </option>
                    }
                </select>

                <h3>Tipo de uva</h3>
                <select @onchange="TipoUvaChanged" class="form-control">
                    @foreach (var tipoUva in listaTiposUva)
                    {
                        <option value="@tipoUva.Id"
                                selected="@(tipoUva.Id == preferencia.IdTipoUva)">
                            @tipoUva.Descricao
                        </option>
                    }
                </select>
            </div>
            <br />
            <br />
        </form>
        <div class="form-group">
            <button class="btn btn-success form-control" @onclick="GravarAlteracoes">Salvar</button>
        </div>
    </div>


</section>



@code {

    List<TipoVinho> listaTiposVinho = null;
    List<TipoUva> listaTiposUva = null;
    UsuarioPreferencia preferencia = null;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        listaTiposVinho = Service.GetTiposVinho();
        listaTiposUva = Service.GetTiposUva();

        preferencia = Service.GetRegistroPreferenciaUsuario(userId());
        if (preferencia == null)
        {
            preferencia = new UsuarioPreferencia();
            preferencia.Id = 0;
            preferencia.IdUsuario = userId();
        }
    }

    void GravarAlteracoes()
    {
        Service.AtualizarPreferencias(preferencia);
        NavigationManager.NavigateTo("/usuario/recomendacoes");
    }

    void TipoVinhoChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int id))
        {
            preferencia.IdTipoVinho = id;
        }
    }

    void TipoUvaChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int id))
        {
            preferencia.IdTipoUva = id;
        }
    }


    private string userId()
    {
        var authState = AuthenticationStateProvider.GetAuthenticationStateAsync().Result;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            return user.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value;
        }

        return "";
    }

}
