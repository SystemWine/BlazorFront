@page "/vinhos/pesquisar"
@using FrontSystemWine.Models
@using FrontSystemWine.Services
@using FrontSystemWine.DTOS

@inherits OwningComponentBase<VinhoService>

<div class="row">
    <p>
        <a class="btn btn-primary" data-toggle="collapse" href="#filtros" role="button" aria-expanded="false" aria-controls="filtros">
            Filtros
        </a>
    </p>
    <div class="collapse" id="filtros">
        <div class="form-group">
            <label for="">Tipo de vinho</label>
            <select @onchange="TipoVinhoChanged" class="form-control">
                @foreach (var tipoVinho in listaTiposVinho)
                {
                    <option value="@tipoVinho.Id"
                            selected="@(tipoVinho.Id == pesquisa.IdTipoVinho)">
                        @tipoVinho.Descricao
                    </option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="">Tipo de uva</label>
            <select @onchange="TipoUvaChanged" class="form-control">
                @foreach (var tipoUva in listaTiposUva)
                {
                    <option value="@tipoUva.Id"
                            selected="@(tipoUva.Id == pesquisa.IdTipoVinho)">
                        @tipoUva.Descricao
                    </option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="">País</label>
            <select @onchange="PaisChanged" class="form-control">
                @foreach (var pais in listaPaises)
                {
                    <option value="@pais.Id"
                            selected="@(pais.Id == pesquisa.IdPais)">
                        @pais.Descricao
                    </option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="">Região</label>
            <select @onchange="RegiaoChanged" class="form-control">
                @foreach (var regiao in listaRegioes)
                {
                <option value="@regiao.Id"
                        selected="@(regiao.Id == pesquisa.IdRegiao)">
                    @NomeRegiao(regiao)
                </option>
                }
            </select>
        </div>
    </div>
</div>

@if (listaVinhos != null)
{
    <div class="row">

        @foreach (var vinho in listaVinhos)
        {
            <FrontSystemWine.Pages.Components.Vinho.VinhoIndividual vinho="vinho" permiteVoto="true">
            </FrontSystemWine.Pages.Components.Vinho.VinhoIndividual>
        }
        @if (listaVinhos.Count == 0)
        {
            <div class="alert alert-primary" role="alert">
                Não há resultados para a sua <strong>combinação de filtros</strong>...
            </div>
        }
    </div>

}

@code {
    /*
     * Sessão de váriaveis
     */

    AtributosPesquisaVinho pesquisa = new AtributosPesquisaVinho() { Id = 0, IdTipoUva = 0, IdTipoVinho = 0, IdPais = 0, IdRegiao = 0 };

    List<Vinho> listaVinhos;

    List<TipoVinho> listaTiposVinho;
    List<TipoUva> listaTiposUva;
    List<Pais> listaPaises;
    List<Regiao> listaRegioes;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        CarregarCombos();
        listaVinhos = Service.GetVinhosComFiltro(pesquisa);
    }

    void RegiaoChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int id))
        {
            pesquisa.IdRegiao = id;
            listaVinhos = Service.GetVinhosComFiltro(pesquisa);
        }
    }

    void PaisChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int id))
        {
            pesquisa.IdPais = id;
            listaVinhos = Service.GetVinhosComFiltro(pesquisa);
        }
    }

    void TipoVinhoChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int id))
        {
            pesquisa.IdTipoVinho = id;
            listaVinhos = Service.GetVinhosComFiltro(pesquisa);
        }
    }

    void TipoUvaChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int id))
        {
            pesquisa.IdTipoUva = id;
            listaVinhos = Service.GetVinhosComFiltro(pesquisa);
        }
    }

    string NomeRegiao(Regiao regiao)
    {
        return regiao.Id == 0 ? regiao.Descricao : $"{regiao.Pais.Descricao} - {regiao.Descricao}";
    }

    void CarregarCombos()
    {
        /*
         * Tipos de vinho
         */
        listaTiposVinho = Service.GetTiposVinho();
        var todosVinho = new TipoVinho();
        todosVinho.Id = 0;
        todosVinho.Descricao = "(todos)";

        listaTiposVinho.Insert(0, todosVinho);

        listaTiposUva = Service.GetTiposUva();
        var todosUva = new TipoUva();
        todosUva.Id = 0;
        todosUva.Descricao = "(todos)";
        listaTiposUva.Insert(0, todosUva);

        listaRegioes = Service.GetRegioes();
        var todasRegioes = new Regiao();
        todasRegioes.Id = 0;
        todasRegioes.Descricao = "(todas)";
        listaRegioes.Insert(0, todasRegioes);

        listaPaises = Service.GetPaises();
        var todosPaises = new Pais();
        todosPaises.Id = 0;
        todosPaises.Descricao = "(todos)";
        listaPaises.Insert(0, todosPaises);
    }
}
